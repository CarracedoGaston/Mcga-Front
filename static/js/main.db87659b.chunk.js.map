{"version":3,"sources":["redux/actions/home.js","redux/reducers/home.js","redux/actions/questions.js","redux/reducers/questions.js","redux/reducers/statics.js","redux/reducers/users.js","redux/reducers/index.js","redux/store.js","components/layouts/MainLayout/index.js","helpers/fetch.js","components/screens/Home/view.js","components/screens/Home/index.js","helpers/post.js","helpers/signIn.js","components/screens/Login/view.js","components/screens/Login/index.js","components/screens/Questions/view.js","components/screens/Questions/index.js","components/screens/Statics/index.js","routes.js","app.js","serviceWorker.js","index.js"],"names":["addPosition","type","initialState","isLoading","error","position","reducer","state","action","loadQuestions","questions","payload","list","data","id","Date","now","user","gameType","title","firstAnswer","secondAnswer","thirdAnswer","firstQuantity","secondQuantity","thirdQuantity","combineReducers","statics","home","users","createStore","rootReducer","MainLayout","props","colorHeader","backgroundApp","MenuShowHide","bind","MenuOut","document","getElementById","style","display","window","location","pathname","split","this","setState","className","color","onClick","to","backgroundColor","children","Component","fetchApi","url","fetch","then","res","json","Home","choose","console","log","length","connect","ownProps","dispatch","bindActionCreators","postApi","method","headers","body","JSON","stringify","catch","err","sigIn","Login","loginAccount","signIn","name","value","password","add","email","alert","placeholder","createAccount","Questions","Statics","Routes","exact","path","component","from","App","store","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db87659b.chunk.js","sourcesContent":["export const ADD_POSITION = 'mcga/ADD_POSITION'\n\nexport const addPosition = () => {\n  return {\n    type: ADD_POSITION,\n  }\n}","import { ADD_POSITION } from \"../actions/home\"\n\nconst initialState = {\n  isLoading: false,\n  error: '',\n  position: 0\n}\n\nconst reducer = (state=initialState, action) => {\n  switch(action.type) {  \n    case ADD_POSITION:\n      return{\n        ...state,\n        position: state.position + 1\n      }     \n    default:\n      return state\n  }\n}\n\nexport default reducer","export const LOAD_QUESTIONS = 'mcga/LOAD_QUESTIONS'\n\nexport const loadQuestions = questions => {\n  return {\n    type: LOAD_QUESTIONS,\n    payload: questions\n  }\n}","import { LOAD_QUESTIONS } from \"../actions/questions\"\n\nconst initialState = {\n  isLoading: false,\n  error: '',\n  list: []\n}\n\nconst reducer = (state=initialState, action) => {\n  switch(action.type) {\n    case LOAD_QUESTIONS:\n      return {\n        ...state,\n        list: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer","const initialState = {\n  isLoading: false,\n  error: '',\n  data: {\n    id: Date.now(), user: 1,  gameType: 1, title:'What food do you prefer?',\n    firstAnswer: 'meat',\n    secondAnswer: 'pasta',\n    thirdAnswer: 'pizza',\n    firstQuantity: 10,\n    secondQuantity: 50,\n    thirdQuantity: 120\n  }\n}\n\nconst reducer = (state=initialState, action) => {\n  switch(action.type) {   \n    default:\n      return state\n  }\n}\n\nexport default reducer","const initialState = {\n  isLoading: false,\n  error: '',\n  list: [ ]\n}\n\nconst reducer = (state=initialState, action) => {\n  switch(action.type) { \n    default:\n      return state\n  }\n}\n\nexport default reducer","import { combineReducers } from 'redux'\nimport home from './home'\nimport questions from './questions'\nimport statics from './statics'\nimport users from './users'\n\nexport default combineReducers({\n  questions,\n  statics,\n  home,\n  users\n})","import { createStore, /*applyMiddleware*/ } from 'redux'\n// import thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nexport default createStore(rootReducer, /*applyMiddleware*/)","import './style.css'\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nclass MainLayout extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      colorHeader: '',\n      backgroundApp: ''\n    }\n    this.MenuShowHide = this.MenuShowHide.bind(this)\n    this.MenuOut = this.MenuOut.bind(this)\n  }\n\n  MenuShowHide() {\n    document.getElementById('Menu').style.display === 'flex'?\n      document.getElementById('Menu').style.display = 'none':\n      document.getElementById('Menu').style.display = 'flex'  \n    document.getElementById('Dark').style.display === 'flex'?\n      document.getElementById('Dark').style.display = 'none':\n      document.getElementById('Dark').style.display = 'flex'\n  }\n\n  MenuOut() {\n    document.getElementById('Menu').style.display === 'flex'?\n      document.getElementById('Menu').style.display = 'none':\n      document.getElementById('Menu').style.display = 'flex'  \n    document.getElementById('Dark').style.display === 'flex'?\n      document.getElementById('Dark').style.display = 'none':\n      document.getElementById('Dark').style.display = 'flex'\n  }\n\n  componentDidMount(){\n    switch(window.location.pathname.split('/')[1]) {\n      case 'home':\n        this.setState({colorHeader: 'rgb(105, 73, 247)'})\n        this.setState({backgroundApp: 'rgb(202, 192, 247)'})\n        break\n      case 'login':\n        this.setState({colorHeader: 'rgb(231, 56, 223)'})\n        this.setState({backgroundApp: 'rgb(243, 192, 247)'})\n        break\n      case 'questions':\n        this.setState({colorHeader: 'rgb(44, 188, 207)'})\n        this.setState({backgroundApp: 'rgb(192, 247, 243)'})\n        break\n      case 'statics':\n        this.setState({colorHeader: 'rgb(124, 10, 177)'})\n        this.setState({backgroundApp: 'rgb(222, 192, 247)'})\n        break\n      default:\n        this.setState({colorHeader: 'black'})\n        this.setState({backgroundApp: 'black'})\n        break\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"MainLayout\">\n        <div id=\"header\" className='color' style={{color: this.state.colorHeader}}>\n          {window.location.pathname.split('/')}  \n        </div>\n        <div id=\"MenuButton\" onClick={this.MenuShowHide}>\n        </div>\n        <div id=\"Menu\">\n          <div id=\"ImgTop\"></div>\n          <ul id=\"MenuContainer\">\n            <div id=\"publicSection\">\n              <Link to=\"/home\"><li className=\"link\">\n                <div id=\"homeImg\" className=\"imgsMenu\"></div>Home</li>\n              </Link>\n              <Link to=\"/login\"><li className=\"link\">\n                <div id=\"loginImg\" className=\"imgsMenu\"></div>Login</li>\n              </Link>\n            </div>\n            <div id=\"privateSection\">\n              <Link to=\"/questions\"><li className=\"link\">\n                <div id=\"questionImg\" className=\"imgsMenu\"></div>Questions</li>\n              </Link>\n              <Link to=\"/statics\"><li className=\"link\">\n                <div id=\"staticImg\" className=\"imgsMenu\"></div>Statics</li>\n              </Link>\n            </div>\n          </ul>\n        </div>      \n        <div id=\"MainContainer\" style={{backgroundColor: this.state.backgroundApp}}>\n          { this.props.children }\n        </div>\n        <div id=\"Dark\" onClick={this.MenuOut}></div>\n      </div>\n    )\n  }\n}\n\nexport default MainLayout","const fetchApi = url => {\r\n  return fetch('http://localhost:5000/api/'+url)\r\n    .then(res => res.json())\r\n}\r\n\r\nexport default fetchApi","import './style.css'\nimport React, { Component } from 'react'\nimport MainLayout from '../../layouts/MainLayout'\nimport fetchApi from '../../../helpers/fetch'\n\nclass Home extends Component {\n  choose = () => {\n    this.props.addPosition()\n  }\n  componentDidMount(){\n    fetchApi('/question')\n        .then(data => this.props.loadQuestions(data))\n  }\n  render() { \n    return (\n      <MainLayout>\n        {console.log(this.props.questions)}\n        <div className=\"Container\">\n          {!(this.props.position===this.props.questions.length)?\n          <div id=\"questionPlay\">\n            <div id=\"questionToAnswer\">\n              <h1>{this.props.questions[this.props.position].title}</h1>\n            </div>  \n            <button className=\"buttonAnswer\" onClick={this.choose}>{this.props.questions[this.props.position].firstAnswer}</button>\n            <button className=\"buttonAnswer\" onClick={this.choose}>{this.props.questions[this.props.position].secondAnswer}</button>\n            <button className=\"buttonAnswer\" onClick={this.choose}>{this.props.questions[this.props.position].thirdAnswer}</button>\n          </div>\n          :\n          <div>No more questions. Try Later</div>}\n          <div id=\"staticsImgExample\"></div>\n        </div>\n      </MainLayout>\n    )\n  }\n}\n\nexport default Home\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { addPosition } from './../../../redux/actions/home'\nimport { loadQuestions } from './../../../redux/actions/questions'\nimport Home from './view'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    questions: state.questions.list,\n    position: state.home.position,\n    isLoading: state.questions.isLoading  \n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    { addPosition, loadQuestions },\n    dispatch\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","const postApi = (data, url) => {\r\n  fetch('http://localhost:5000/api/'+url, {\r\n    method: 'POST',\r\n    headers: {\"Accept\": 'application/json',\r\n              \"Content-Type\": \"application/json\"},\r\n    body: JSON.stringify(data)\r\n  })\r\n  .catch(err => console.log(err))\r\n}\r\n\r\nexport default postApi","const sigIn = (data, url) => {\r\n  return fetch('http://localhost:5000/api/user/'+url, {\r\n    method: 'POST',\r\n    headers: {\"Accept\": 'application/json',\r\n              \"Content-Type\": \"application/json\"},\r\n    body: JSON.stringify(data)\r\n  })\r\n    .then(res => res.json())\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport default sigIn","import './style.css'\nimport React, { Component } from 'react'\nimport MainLayout from '../../layouts/MainLayout'\nimport postApi from '../../../helpers/post'\nimport signIn from '../../../helpers/signIn'\n\nclass Login extends Component {\n\n  createAccount() {\n    document.getElementById('inputCreateAccount').style.display = 'flex'\n    document.getElementById('createAccount').style.display = 'none'\n    document.getElementById('buttonLogin').style.display = 'none'\n    document.getElementById('buttonSave').style.display = 'flex'\n  }\n  \n  loginAccount = () => {\n    signIn({\n      name: document.getElementById('inputName').value,\n      password: document.getElementById('inputPassword').value\n    }, 'signIn').then(data => console.log(data))\n  }\n\n  add = () => {\n    if (\n      document.getElementById('inputName').value !== \"\" &&\n      document.getElementById('inputPassword').value !== \"\" &&\n      document.getElementById('inputCreateAccount').value !== \"\"\n    ){\n      postApi({\n        name: document.getElementById('inputName').value,\n        email: document.getElementById('inputCreateAccount').value,\n        password: document.getElementById('inputPassword').value\n        }, 'user')\n      window.alert('User Saved')\n      document.getElementById('inputName').value = \"\"\n      document.getElementById('inputPassword').value = \"\"\n      document.getElementById('inputCreateAccount').value = \"\"\n      document.getElementById('inputCreateAccount').style.display = 'none'\n      document.getElementById('createAccount').style.display = 'flex'\n      document.getElementById('buttonLogin').style.display = 'flex'\n      document.getElementById('buttonSave').style.display = 'none'\n    }\n    else {\n      window.alert('Complete all the data')\n      return\n    } \n  }\n\n  render() {\n    return (\n      <MainLayout>\n        <div className=\"Container\">\n          <div id=\"login\">\n            <input className=\"inputLogin\" id=\"inputName\" placeholder=\" Name\"></input>\n            <input className=\"inputLogin\"  id=\"inputPassword\" placeholder=\" Password\"></input>\n            <input id=\"inputCreateAccount\" placeholder=\" Email\"></input>\n          </div>\n          <div id=\"buttonsLoginContainer\">\n            <div id=\"createAccount\" onClick={this.createAccount}>Create Account</div>\n            <button id=\"buttonLogin\" className=\"buttonLogin\" onClick={this.loginAccount}>Log In</button>\n            <button id=\"buttonSave\" className=\"buttonLogin\" onClick={this.add}>Save</button>\n          </div>\n        </div>\n      </MainLayout>\n    )\n  }\n}\n\nexport default Login","import { connect } from 'react-redux'\nimport Login from './view'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    users: state.users.list,\n    isLoading: state.users.isLoading\n  }\n}\n\nexport default connect(mapStateToProps)(Login)","import './style.css'\nimport React, { Component } from 'react'\nimport MainLayout from '../../layouts/MainLayout'\nimport postApi from '../../../helpers/post'\n\nclass Questions extends Component {\n\n  add = () => {\n    if (\n      document.getElementById('questionToMake').value !== \"\" &&\n      document.getElementById('questionFirstAnswer').value !== \"\" &&\n      document.getElementById('questionSecondtAnswer').value !== \"\" &&\n      document.getElementById('questionThirdAnswer').value !== \"\"\n    ){ \n      postApi({\n        title: document.getElementById('questionToMake').value,\n        user: '5dc215cc5461de431893ea66', //user need to be changed\n        firstAnswer: document.getElementById('questionFirstAnswer').value,\n        secondAnswer: document.getElementById('questionSecondtAnswer').value,\n        thirdAnswer: document.getElementById('questionThirdAnswer').value,\n        firstQuantity: '0',\n        secondQuantity: '0',\n        thirdQuantity: '0'\n        }, 'question')\n      window.alert('Question Saved')\n      document.getElementById('questionToMake').value = \"\"\n      document.getElementById('questionFirstAnswer').value = \"\"\n      document.getElementById('questionSecondtAnswer').value = \"\"\n      document.getElementById('questionThirdAnswer').value = \"\"\n    }\n    else {\n      window.alert('Complete all the data')\n      return\n    } \n  }\n  \n  render() {\n    return (\n      <MainLayout>\n        <div className=\"Container\">\n          <div id=\"newQuestion\">\n            <textarea id=\"questionToMake\" placeholder=\"Insert your new Question!!\" />  \n            <input className=\"inputAnswer\" id=\"questionFirstAnswer\" placeholder=\"First Answer...\" />\n            <input className=\"inputAnswer\" id=\"questionSecondtAnswer\" placeholder=\"Second Answer...\" />\n            <input className=\"inputAnswer\" id=\"questionThirdAnswer\" placeholder=\"Third Answer...\" />\n          </div>\n          <div id=\"buttonNewQuestion\">\n            <button className=\"buttonQuestion\" onClick={this.add}>Save Question</button>\n          </div>\n        </div>\n      </MainLayout>\n    )\n  }\n}\n\nexport default Questions\n","import { connect } from 'react-redux'\nimport Questions from './view'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    questions: state.questions.list,\n    isLoading: state.questions.isLoading\n  }\n}\n\nexport default connect(mapStateToProps)(Questions)","import './style.css'\nimport React, { Component } from 'react'\nimport MainLayout from '../../layouts/MainLayout'\n\nclass Statics extends Component {\n  render() {\n    return (\n      <MainLayout>\n        <div className=\"Container\">\n          <div id=\"selectStatic\">      \n            <div className=\"staticQuestion\">Which sport do you prefer?</div>\n            <div className=\"staticQuestion\">What type of person you are?</div>\n            <div className=\"staticQuestion\">How old are you?</div>\n            <div className=\"staticQuestion\">Which color do you prefer?</div>\n            <div className=\"staticQuestion\">What is your sex?</div>\n          </div>\n          <div id=\"staticsImgExamp\"></div>\n        </div>\n      </MainLayout>\n    )\n  }\n}\n\nexport default Statics","import React, { Component } from 'react'\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom'\nimport Home from './components/screens/Home'\nimport Login from './components/screens/Login'\nimport Questions from './components/screens/Questions'\nimport Statics from './components/screens/Statics'\n\nclass Routes extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/questions\" component={Questions} />\n          <Route exact path=\"/statics\" component={Statics} />\n          <Redirect from=\"/\" to=\"/home\" />\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default Routes","import React, { Component } from 'react'\nimport {Provider} from 'react-redux'\nimport store from'./redux/store'\nimport Routes from './routes'\n\nclass App extends Component {\n  render() {\n      return (\n      <Provider store={store}>\n          <Routes />\n      </Provider>\n      )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './reset.css'\nimport './index.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}